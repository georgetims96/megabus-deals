<!DOCTYPE html>
<html>
  <head>
    <title>1-Dollar Journeys</title>
    <%- include('partials/head.ejs') %>
  </head>
<body>
  <div class="container-fluid w-75">
    <div class"row">
      <div class="column">
        <h1 class="text-primary text-center">Megabus Deals</h1>
      </div>
    </div>
    <div class="row">
      <h4 class="text-secondary muted text-center"><%= sourceCity %> - <%= destinationCity %></h4>
    </div>
    <div class="row">
      <div class="accordion" id="journeyInformation" >
        <div class="accordion-item">
          <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
              Out Journey
            </button>
          </h2>
          <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#journeyInformation" style="">
            <div class="accordion-body">
              <ul id="outJourneyList">
              </ul>
            </div>
          </div>
        </div>
        <div class="accordion-item">
          <h2 class="accordion-header" id="headingTwo">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
              Return Journey
            </button>
          </h2>
          <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#journeyInformation" style="">
            <div class="accordion-body">
              <ul id="returnJourneyList"> 
                
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <%- include('partials/script.ejs') %>
  <script>
    // Add an event listener we'll use to add relevant journeys to cart
    document.addEventListener('click', function(e) {
      if (e.target) {
        // TODO hook up journey buttons to relevant functionality
        var clickId = e.target.id;
        let relArgs = clickId.split("=");
        if (relArgs.length > 1) {
          alert(clickId[1]);
        }
      }
    });
    var xhttp = new XMLHttpRequest();
    xhttp.overrideMimeType("application/json");
    xhttp.open("GET", "deals?sourceCity=<%= sourceCity %>&destinationCity=<%= destinationCity %>&outDateSelection=<%= outDates %>&returnDateSelection=<%= returnDates %>");
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xhttp.onreadystatechange = function() {
      if (this.readyState === 4 && this.status === 200) {
        var response = this.responseText;
        var data = JSON.parse(response).data;
        var outJourneys = data.outJourneys;
        var returnJourneys = data.returnJourneys;
        
        function getDayDifference(date1, date2) {
          let date1Proc = new Date(date1);
          let date2Proc = new Date(date2);
          let difference = date2Proc.getTime() - date1Proc.getTime();
          let daysDifference = Math.ceil(difference / (1000 * 3600 * 24));
          return daysDifference;
        }

        let filteredOut = [];
        let filteredReturn = [];
        for (let journey of outJourneys) {
          for (let returnJourney of returnJourneys) {
            let dayDiff = getDayDifference(journey.departureDateTime, returnJourney.departureDateTime);
            if (dayDiff < 7 && dayDiff > 0) {
              // FIXME remove
              console.log(`Out: ${journey}, Return ${returnJourney}`);
              filteredOut.push(journey);
              filteredReturn.push(returnJourney);
            }
          }
        }


        let outJourneyList = document.getElementById("outJourneyList");
        let returnJourneyList = document.getElementById("returnJourneyList");


        for (let journey of filteredOut) {
          let curDate = new Date(journey.departureDateTime);
          let curDayStr = `${curDate.getDate()}/${curDate.getMonth()}/${curDate.getFullYear()}`;
          let timeStamp = `${curDate.getHours()}:${curDate.getMinutes()}`;
          let relLi = document.getElementById(`out&${curDayStr}`);
          if (relLi === null) {
            let journeyLi = document.createElement("li");
            journeyLi.setAttribute("id", `out&${curDayStr}`);
            let curSpan = document.createElement("span");
            curSpan.setAttribute("id", `out&${curDayStr}=${journey.journeyId}`);
            curSpan.appendChild(document.createTextNode(`${curDayStr}: ${timeStamp}`));
            outJourneyList.appendChild(journeyLi);
            journeyLi.appendChild(curSpan);
        
          } else {
            let relSpan = document.getElementById(`out&${curDayStr}=${journey.journeyId}`);
            if (relSpan === null) {
              let curSpan = document.createElement("span");
              curSpan.setAttribute("id", `out&${curDayStr}=${journey.journeyId}`);
              curSpan.appendChild(document.createTextNode(`, ${timeStamp}`));
              relLi.appendChild(curSpan);
            }
          }

        }

        for (let journey of filteredReturn) {
          let curDate = new Date(journey.departureDateTime);
          let curDayStr = `${curDate.getDate()}/${curDate.getMonth()}/${curDate.getFullYear()}`;
          let timeStamp = `${curDate.getHours()}:${curDate.getMinutes()}`;
          let relLi = document.getElementById(`return&${curDayStr}`);
          if (relLi === null) {
            let journeyLi = document.createElement("li");
            journeyLi.setAttribute("id", `return&${curDayStr}`);
            let curSpan = document.createElement("span");
            curSpan.setAttribute("id", `return&${curDayStr}=${journey.journeyId}`);
            curSpan.appendChild(document.createTextNode(`${curDayStr}: ${timeStamp}`));
            returnJourneyList.appendChild(journeyLi);
            journeyLi.appendChild(curSpan);
        
          } else {
            let relSpan = document.getElementById(`return&${curDayStr}=${journey.journeyId}`);
            if (relSpan === null) {
              let curSpan = document.createElement("span");
              curSpan.setAttribute("id", `return&${curDayStr}=${journey.journeyId}`);
              curSpan.appendChild(document.createTextNode(`, ${timeStamp}`));
              relLi.appendChild(curSpan);
            }
          }

        }
        
      }
    }
    xhttp.send();
  </script>
  </body>
</html>
